version: '3.13'

volumes:
  pgdata:
  ollama_data:
  backend_uploads:

services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: faq-db
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    networks:
      - faq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: faq-redis
    networks:
      - faq-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: faq-ollama
    volumes:
      - ollama_data:/root/.ollama
    environment:
      OLLAMA_HOST: 0.0.0.0:11434
    networks:
      - faq-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["ollama", "serve"]

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: faq-backend
    volumes:
      - backend_uploads:/app/uploads
    environment:
      SECRET_KEY: ${SECRET_KEY}
      SQLALCHEMY_DATABASE_URI: ${SQLALCHEMY_DATABASE_URI}
      OLLAMA_ENDPOINT: ${OLLAMA_ENDPOINT}
      MODEL_NAME: ${MODEL_NAME}
      UPLOAD_FOLDER: ${UPLOAD_FOLDER}
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - faq-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: faq-frontend
    networks:
      - faq-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: faq-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - faq-network

networks:
  faq-network:
    driver: bridge